---
apiVersion: v1
kind: Service
metadata:
  name: my-crdb-public
  labels:
    app.kubernetes.io/instance: my-crdb
    app.kubernetes.io/component: database
    app.kubernetes.io/name: cockroachdb
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/instance: my-crdb
    app.kubernetes.io/component: database
    app.kubernetes.io/name: cockroachdb
  ports:
  - name: grpc
    port: 26258
    protocol: TCP
    targetPort: 26258
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: sql
    port: 26257
    protocol: TCP
    targetPort: 26257
---
apiVersion: v1
kind: Service
metadata:
  name: my-crdb
  labels:
    app.kubernetes.io/instance: my-crdb
    app.kubernetes.io/component: database
    app.kubernetes.io/name: cockroachdb
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "_status/vars"
    prometheus.io/port: "8080"
    
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/instance: my-crdb
    app.kubernetes.io/component: database
    app.kubernetes.io/name: cockroachdb
  ports:
  - name: grpc
    port: 26258
    protocol: TCP
    targetPort: 26258
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: sql
    port: 26257
    protocol: TCP
    targetPort: 26257
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-crdb-budget
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/name: cockroachdb
    app.kubernetes.io/instance: my-crdb
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-crdb
      app.kubernetes.io/component: database
      app.kubernetes.io/name: cockroachdb
  maxUnavailable: 2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-crdb
# ステートフルセットスペック
spec:
  serviceName: "my-crdb"
  replicas: 5
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-crdb
      app.kubernetes.io/component: database
      app.kubernetes.io/name: cockroachdb
  # ポッドテンプレート  
  template: 
    metadata:
      labels:
        app.kubernetes.io/instance: my-crdb
        app.kubernetes.io/component: database
        app.kubernetes.io/name: cockroachdb

    spec:
      terminationGracePeriodSeconds: 60
      # CRDBのポッドはノードに一つとする
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - cockroachdb
              topologyKey: kubernetes.io/hostname

      # 永続ボリューム
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir

      # CRDBのポッドクラスタ
      containers:
      - name: cockroachdb
        image: cockroachdb/cockroach:v21.2.5
        imagePullPolicy: IfNotPresent

        # ポート番号設定　（コマンドと対応しないといけない）
        ports:
        - name: grpc
          containerPort: 26258
          protocol: TCP
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: sql
          containerPort: 26257
          protocol: TCP

        # 環境変数
        env:
        - name: COCKROACH_CHANNEL
          value: kubernetes-insecure
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
              divisor: "1"
        - name: MEMORY_LIMIT_MIB
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: "1Mi"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
     
        # CockroachDB 起動パラメータ
        command:
          - /bin/bash
          - -ecx
          - exec
            /cockroach/cockroach
            start
            --join=my-crdb-0.my-crdb.crdb:26258,my-crdb-1.my-crdb.crdb:26258,my-crdb-2.my-crdb.crdb:26258,my-crdb-3.my-crdb.crdb:26258,my-crdb-4.my-crdb.crdb:26258
            --advertise-host=$(POD_NAME).my-crdb.crdb
            --logtostderr=INFO
            --insecure
            --http-addr 0.0.0.0	    
            --http-port=8080
            --sql-addr=:26257
            --listen-addr=:26258
            --cache $(expr $MEMORY_LIMIT_MIB / 4)MiB
            --max-sql-memory $(expr $MEMORY_LIMIT_MIB / 4)MiB

        # 永続ボリュームのマウント
        volumeMounts:
        - name: datadir
          mountPath: /cockroach/cockroach-data

        # リソース
        resources:
          requests:
            cpu: "2"
            memory: "8Gi"
          limits:
            cpu: "2"
            memory: "8Gi" 

        # 
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /health?ready=1
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
  
        # 停止処理
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - /cockroach/cockroach node drain --insecure || exit 0

  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate

  # ボリュームテンプレート    
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 100Gi

      
